<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <NuGetExePath>$(SrcRoot)NuGet.exe</NuGetExePath>
    <NuspecPath>$(MSBuildProjectDirectory)\$(NuspecFileName).nuspec</NuspecPath>
    <ChocolateyNuspecPath>$(MSBuildProjectDirectory)\$(ChocolateyFileName).nuspec</ChocolateyNuspecPath>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <NuGetInput>
      <Visible>False</Visible>
    </NuGetInput>
  </ItemDefinitionGroup>

  <ItemGroup Condition="'$(NuspecFileName)' != ''">
    <NuGetInput Condition="Exists('$(NuspecPath)')" Include="$(NuspecPath)" />
    <NuGetInput Include="$(MSBuildThisFileFullPath)" />
  </ItemGroup>

  <ItemGroup Condition="'$(ChocolateyFileName)' != ''">
    <ChocolateyInput Condition="Exists('$(ChocolateyNuspecPath)')" Include="$(ChocolateyNuspecPath)" />
    <ChocolateyInput Include="$(MSBuildThisFileFullPath)" />
  </ItemGroup>

  <Target Name="ExtractVersion"
          AfterTargets="CoreBuild"
          Condition="Exists('$(NuspecPath)')"
          DependsOnTargets="PrepareResources;GenerateAssemblyVersionInfo">
    <PropertyGroup>
      <NupkgPath>$(OutDir)$(NuspecFileName).$(Version).nupkg</NupkgPath>
      <ChocolateyNupkgPath>$(OutDir)$(ChocolateyFileName).$(Version).nupkg</ChocolateyNupkgPath>
    </PropertyGroup>
  </Target>

  <Target Name="BuildNuGet"
          AfterTargets="ExtractVersion"
          Condition="Exists('$(NuspecPath)')"
          DependsOnTargets="ExtractVersion;_DownloadNuGet"
          Inputs="@(NuGetInput)"
          Outputs="$(NupkgPath)">
    <Exec Command="$(SrcRoot)NuGet.exe Pack $(NuspecFileName).nuspec -BasePath $(OutDir) -OutputDirectory $(OutDir) -prop currentVersion=$(Version)" />
  </Target>

  <Target Name="BuildChocolatey"
          AfterTargets="ExtractVersion"
          Condition="Exists('$(ChocolateyNuspecPath)') AND Exists('C:\ProgramData\chocolatey\choco.exe')"
          DependsOnTargets="ExtractVersion"
          Inputs="@(ChocolateyInput)"
          Outputs="$(ChocolateyNupkgPath)">
    <Exec Command="C:\ProgramData\chocolatey\choco.exe Pack &quot;$(ChocolateyNuspecPath)&quot; -OutputDirectory $(OutDir) currentVersion=$(Version) outdir=$(OutDir)" />
  </Target>

  <Target Name="SquirrelReleasify"
          AfterTargets="BuildNuGet"
          Condition="Exists('$(NupkgPath)')"
          DependsOnTargets="BuildNuGet"
          Inputs="$(NupkgPath)"
          Outputs="$(OutDir)Releases\MSBuildStructuredLogSetup.exe">
    <Exec Command="&quot;$(NuGetPackageRoot)squirrel.windows\1.4.0\tools\Squirrel.exe&quot; --releaseDir=$(OutDir)Releases --no-msi --releasify $(NupkgPath)" />
    <Copy SourceFiles="$(OutDir)Releases\Setup.exe" DestinationFiles="$(OutDir)Releases\MSBuildStructuredLogSetup.exe" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
    <Delete Files="$(OutDir)Releases\Setup.exe" />
  </Target>

  <Target Name="_DownloadNuGet">
    <DownloadNuGet OutputFilename="$(NuGetExePath)" Condition="!Exists('$(NuGetExePath)')" />
  </Target>

  <UsingTask TaskName="DownloadNuGet" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <OutputFilename ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Net" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
                try
                {
                    OutputFilename = Path.GetFullPath(OutputFilename);

                    Log.LogMessage("Downloading latest version of NuGet.exe...");
                    WebClient webClient = new WebClient();
                    webClient.DownloadFile("https://dist.nuget.org/win-x86-commandline/latest/nuget.exe", OutputFilename);

                    return true;
                }
                catch (Exception ex) {
                    Log.LogErrorFromException(ex);
                    return false;
                }
            ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>
